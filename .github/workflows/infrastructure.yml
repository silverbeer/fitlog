name: 🏗️ Deploy Infrastructure

on:
  push:
    branches: [main]
    paths:
      - 'infrastructure/**'
      - '.github/workflows/infrastructure.yml'
  pull_request:
    branches: [main]
    paths:
      - 'infrastructure/**'

env:
  AWS_REGION: us-east-1
  TF_VERSION: 1.10.4

jobs:
  plan:
    name: 📋 Terraform Plan
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: ⚙️ Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: 🔧 Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: 🎯 Terraform Init
      working-directory: infrastructure
      run: |
        # Create backend config if it doesn't exist
        if [ ! -f backend.hcl ]; then
          echo "⚠️ backend.hcl not found. Creating from template..."
          cat > backend.hcl << EOF
        bucket         = "fitlog-terraform-state-bucket-${{ secrets.AWS_ACCOUNT_ID }}"
        key            = "fitlog/terraform.tfstate"
        region         = "${{ env.AWS_REGION }}"
        dynamodb_table = "fitlog-terraform-state-lock"
        encrypt        = true
        profile        = "default"
        EOF
        fi

        terraform init -backend-config=backend.hcl

    - name: 🧹 Terraform Format Check
      working-directory: infrastructure
      run: terraform fmt -check

    - name: ✅ Terraform Validate
      working-directory: infrastructure
      run: terraform validate

    - name: 📋 Terraform Plan
      working-directory: infrastructure
      run: |
        terraform plan \
          -var="aws_profile=default" \
          -var="expected_account_id=${{ secrets.AWS_ACCOUNT_ID }}" \
          -var="environment=dev" \
          -out=tfplan.out

    - name: 📊 Upload Plan
      uses: actions/upload-artifact@v4
      with:
        name: terraform-plan
        path: infrastructure/tfplan.out
        retention-days: 5

  deploy:
    name: 🚀 Terraform Apply
    runs-on: ubuntu-latest
    needs: plan
    if: github.ref == 'refs/heads/main'
    # environment: production  # Add this later in GitHub repo settings for deployment protection

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: ⚙️ Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: 🔧 Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: 📥 Download Plan
      uses: actions/download-artifact@v4
      with:
        name: terraform-plan
        path: infrastructure/

    - name: 🎯 Terraform Init
      working-directory: infrastructure
      run: |
        # Create backend config if it doesn't exist
        if [ ! -f backend.hcl ]; then
          echo "⚠️ backend.hcl not found. Creating from template..."
          cat > backend.hcl << EOF
        bucket         = "fitlog-terraform-state-bucket-${{ secrets.AWS_ACCOUNT_ID }}"
        key            = "fitlog/terraform.tfstate"
        region         = "${{ env.AWS_REGION }}"
        dynamodb_table = "fitlog-terraform-state-lock"
        encrypt        = true
        profile        = "default"
        EOF
        fi

        terraform init -backend-config=backend.hcl

    - name: 🚀 Terraform Apply
      working-directory: infrastructure
      run: terraform apply tfplan.out

    - name: 📊 Output Infrastructure Details
      working-directory: infrastructure
      run: |
        echo "✅ Infrastructure deployment complete!"
        echo ""
        echo "📋 Outputs:"
        terraform output
        echo ""
        echo "🔗 API Gateway URL:"
        API_ID=$(terraform output -raw api_endpoint | sed 's/.*://' | sed 's/\/dev//')
        echo "https://${API_ID}.execute-api.${{ env.AWS_REGION }}.amazonaws.com/dev"

  security-scan:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🔒 Run Checkov security scan
      uses: bridgecrewio/checkov-action@master
      with:
        directory: infrastructure/
        framework: terraform
        soft_fail: true  # Don't fail the build, just report
        output_format: cli,sarif
        output_file_path: console,results.sarif

    - name: 📊 Upload SARIF file
      if: always()
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: results.sarif
